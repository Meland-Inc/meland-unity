// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: skill.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bian {

  /// <summary>Holder for reflection information generated from skill.proto</summary>
  public static partial class SkillReflection {

    #region Descriptor
    /// <summary>File descriptor for skill.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SkillReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgtza2lsbC5wcm90bxIEQmlhbhoKYnVmZi5wcm90byJGChJTa2lsbFJhbmdl",
            "U2V0dGluZ3MSIgoEdHlwZRgBIAEoDjIULkJpYW4uU2tpbGxSYW5nZVR5cGUS",
            "DAoEYXJncxgCIAMoBSJHCgtTa2lsbEVmZmVjdBIqCgtlZmZlY3RfdHlwZRgB",
            "IAEoDjIVLkJpYW4uU2tpbGxFZmZlY3RUeXBlEgwKBGFyZ3MYAiADKAUisgMK",
            "DVNraWxsU2V0dGluZ3MSCgoCaWQYASABKAUSKgoLdGFyZ2V0X3R5cGUYAiAB",
            "KA4yFS5CaWFuLlNraWxsVGFyZ2V0VHlwZRIQCghkaXN0YW5jZRgDIAEoBRIY",
            "ChBhY2NtdWxhdGlvbl90aW1lGAQgASgFEh8KF2JlZm9yZV9hdHRhY2tfcm9s",
            "bF90aW1lGAUgASgFEhQKDHJlbGVhc2VfdGltZRgGIAEoBRIXCg9hdHRhY2th",
            "YmxlX21hc2sYByABKAUSMAoOcmFuZ2Vfc2V0dGluZ3MYCCABKAsyGC5CaWFu",
            "LlNraWxsUmFuZ2VTZXR0aW5ncxImCgtlZmZlY3Rfc2VsZhgJIAMoCzIRLkJp",
            "YW4uU2tpbGxFZmZlY3QSJwoMZWZmZWN0X2VuZW15GAogAygLMhEuQmlhbi5T",
            "a2lsbEVmZmVjdBImCgpidWZmc19zZWxmGAsgAygLMhIuQmlhbi5CdWZmU2V0",
            "dGluZ3MSJwoLYnVmZnNfZW5lbXkYDCADKAsyEi5CaWFuLkJ1ZmZTZXR0aW5n",
            "cxIZChFjYW5fYnJlYWtfcHJlcGFyZRgNIAEoCCppCg9Ta2lsbFRhcmdldFR5",
            "cGUSJwojU2tpbGxUYXJnZXRUeXBlX1NraWxsVGFyZ2V0VHlwZUZyZWUQABIt",
            "CilTa2lsbFRhcmdldFR5cGVfU2tpbGxUYXJnZXRUeXBlV2l0aFRhcmdldBAB",
            "KqQCChVTa2lsbEF0dGFja1RhcmdldFR5cGUSNgoyU2tpbGxBdHRhY2tUYXJn",
            "ZXRUeXBlX1NraWxsQXR0YWNrVGFyZ2V0VHlwZVVua25vd24QABI2CjJTa2ls",
            "bEF0dGFja1RhcmdldFR5cGVfU2tpbGxBdHRhY2tUYXJnZXRUeXBlTW9uc3Rl",
            "chABEjIKLlNraWxsQXR0YWNrVGFyZ2V0VHlwZV9Ta2lsbEF0dGFja1Rhcmdl",
            "dFR5cGVIb2UQAhIyCi5Ta2lsbEF0dGFja1RhcmdldFR5cGVfU2tpbGxBdHRh",
            "Y2tUYXJnZXRUeXBlQXhlEAMSMwovU2tpbGxBdHRhY2tUYXJnZXRUeXBlX1Nr",
            "aWxsQXR0YWNrVGFyZ2V0VHlwZUhhbmQQBCqyAwoOU2tpbGxSYW5nZVR5cGUS",
            "KAokU2tpbGxSYW5nZVR5cGVfU2tpbGxSYW5nZVR5cGVVbmtub3duEAASJQoh",
            "U2tpbGxSYW5nZVR5cGVfU2tpbGxSYW5nZVR5cGVMaW5lEAESJwojU2tpbGxS",
            "YW5nZVR5cGVfU2tpbGxSYW5nZVR5cGVDaXJjbGUQAhIpCiVTa2lsbFJhbmdl",
            "VHlwZV9Ta2lsbFJhbmdlVHlwZVNlY3RvcjYwEAMSKQolU2tpbGxSYW5nZVR5",
            "cGVfU2tpbGxSYW5nZVR5cGVTZWN0b3I5MBAEEioKJlNraWxsUmFuZ2VUeXBl",
            "X1NraWxsUmFuZ2VUeXBlU2VjdG9yMTIwEAUSKgomU2tpbGxSYW5nZVR5cGVf",
            "U2tpbGxSYW5nZVR5cGVTZWN0b3IxODAQBhIlCiFTa2lsbFJhbmdlVHlwZV9T",
            "a2lsbFJhbmdlVHlwZVJlY3QQBxInCiNTa2lsbFJhbmdlVHlwZV9Ta2lsbFJh",
            "bmdlVHlwZVNlY3RvchAIEigKJFNraWxsUmFuZ2VUeXBlX1NraWxsUmFuZ2VU",
            "eXBlUmhvbWJ1cxAJKoACCg9Ta2lsbEVmZmVjdFR5cGUSIwofU2tpbGxFZmZl",
            "Y3RUeXBlX1NraWxsRWZmZWN0Tm9uZRAAEiYKIlNraWxsRWZmZWN0VHlwZV9T",
            "a2lsbEVmZmVjdEFkZGJ1ZmYQARIlCiFTa2lsbEVmZmVjdFR5cGVfU2tpbGxF",
            "ZmZlY3RBdHRhY2sQAhIkCiBTa2lsbEVmZmVjdFR5cGVfU2tpbGxFZmZlY3RB",
            "ZGRIcBADEigKJFNraWxsRWZmZWN0VHlwZV9Ta2lsbEVmZmVjdEFkZEh1bmdy",
            "eRAEEikKJVNraWxsRWZmZWN0VHlwZV9Ta2lsbEVmZmVjdEFkZFRoaXJzdHkQ",
            "BWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bian.BuffReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Bian.SkillTargetType), typeof(global::Bian.SkillAttackTargetType), typeof(global::Bian.SkillRangeType), typeof(global::Bian.SkillEffectType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bian.SkillRangeSettings), global::Bian.SkillRangeSettings.Parser, new[]{ "Type", "Args" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bian.SkillEffect), global::Bian.SkillEffect.Parser, new[]{ "EffectType", "Args" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bian.SkillSettings), global::Bian.SkillSettings.Parser, new[]{ "Id", "TargetType", "Distance", "AccmulationTime", "BeforeAttackRollTime", "ReleaseTime", "AttackableMask", "RangeSettings", "EffectSelf", "EffectEnemy", "BuffsSelf", "BuffsEnemy", "CanBreakPrepare" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 技能目标指向类型.
  /// </summary>
  public enum SkillTargetType {
    /// <summary>
    /// 无指向性技能
    ///
    /// 这种类型的技能释放的时候不需要指定一个目标，
    /// 只需要通过方向、攻击距离得出对应伤害目标.
    /// </summary>
    [pbr::OriginalName("SkillTargetType_SkillTargetTypeFree")] SkillTargetTypeFree = 0,
    /// <summary>
    /// 指向性技能
    ///
    /// 这种类型的技能释放需要指定一个目标.
    /// </summary>
    [pbr::OriginalName("SkillTargetType_SkillTargetTypeWithTarget")] SkillTargetTypeWithTarget = 1,
  }

  /// <summary>
  /// 技能攻击对象类型
  /// </summary>
  public enum SkillAttackTargetType {
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeUnknown")] SkillAttackTargetTypeUnknown = 0,
    /// <summary>
    /// 怪物类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeMonster")] SkillAttackTargetTypeMonster = 1,
    /// <summary>
    /// 锄头攻击类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeHoe")] SkillAttackTargetTypeHoe = 2,
    /// <summary>
    /// 斧头攻击类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeAxe")] SkillAttackTargetTypeAxe = 3,
    /// <summary>
    /// 空手攻击类型
    /// </summary>
    [pbr::OriginalName("SkillAttackTargetType_SkillAttackTargetTypeHand")] SkillAttackTargetTypeHand = 4,
  }

  /// <summary>
  /// 技能生效范围类型
  /// </summary>
  public enum SkillRangeType {
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeUnknown")] SkillRangeTypeUnknown = 0,
    /// <summary>
    /// 直线区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeLine")] SkillRangeTypeLine = 1,
    /// <summary>
    /// 圆形区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeCircle")] SkillRangeTypeCircle = 2,
    /// <summary>
    /// 60 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector60")] SkillRangeTypeSector60 = 3,
    /// <summary>
    /// 90 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector90")] SkillRangeTypeSector90 = 4,
    /// <summary>
    /// 120 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector120")] SkillRangeTypeSector120 = 5,
    /// <summary>
    /// 180 度扇型
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector180")] SkillRangeTypeSector180 = 6,
    /// <summary>
    /// 矩形区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeRect")] SkillRangeTypeRect = 7,
    /// <summary>
    /// 扇形(自定义张角0~360)
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeSector")] SkillRangeTypeSector = 8,
    /// <summary>
    /// 菱形区域
    /// </summary>
    [pbr::OriginalName("SkillRangeType_SkillRangeTypeRhombus")] SkillRangeTypeRhombus = 9,
  }

  /// <summary>
  /// 技能效果类型
  /// </summary>
  public enum SkillEffectType {
    /// <summary>
    ///无效类型
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectNone")] SkillEffectNone = 0,
    /// <summary>
    /// 添加buff
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddbuff")] SkillEffectAddbuff = 1,
    /// <summary>
    /// 普通攻击
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAttack")] SkillEffectAttack = 2,
    /// <summary>
    /// 加血
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddHp")] SkillEffectAddHp = 3,
    /// <summary>
    /// 增加饥饿度
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddHungry")] SkillEffectAddHungry = 4,
    /// <summary>
    /// 增加饥渴度
    /// </summary>
    [pbr::OriginalName("SkillEffectType_SkillEffectAddThirsty")] SkillEffectAddThirsty = 5,
  }

  #endregion

  #region Messages
  public sealed partial class SkillRangeSettings : pb::IMessage<SkillRangeSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillRangeSettings> _parser = new pb::MessageParser<SkillRangeSettings>(() => new SkillRangeSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillRangeSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bian.SkillReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillRangeSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillRangeSettings(SkillRangeSettings other) : this() {
      type_ = other.type_;
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillRangeSettings Clone() {
      return new SkillRangeSettings(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Bian.SkillRangeType type_ = global::Bian.SkillRangeType.SkillRangeTypeUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bian.SkillRangeType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_args_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> args_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillRangeSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillRangeSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Bian.SkillRangeType.SkillRangeTypeUnknown) hash ^= Type.GetHashCode();
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Bian.SkillRangeType.SkillRangeTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Bian.SkillRangeType.SkillRangeTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      args_.WriteTo(ref output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Bian.SkillRangeType.SkillRangeTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillRangeSettings other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Bian.SkillRangeType.SkillRangeTypeUnknown) {
        Type = other.Type;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Bian.SkillRangeType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Bian.SkillRangeType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 技能攻击效果
  /// </summary>
  public sealed partial class SkillEffect : pb::IMessage<SkillEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillEffect> _parser = new pb::MessageParser<SkillEffect>(() => new SkillEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bian.SkillReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillEffect(SkillEffect other) : this() {
      effectType_ = other.effectType_;
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillEffect Clone() {
      return new SkillEffect(this);
    }

    /// <summary>Field number for the "effect_type" field.</summary>
    public const int EffectTypeFieldNumber = 1;
    private global::Bian.SkillEffectType effectType_ = global::Bian.SkillEffectType.SkillEffectNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bian.SkillEffectType EffectType {
      get { return effectType_; }
      set {
        effectType_ = value;
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_args_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> args_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectType != other.EffectType) return false;
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectType != global::Bian.SkillEffectType.SkillEffectNone) hash ^= EffectType.GetHashCode();
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EffectType != global::Bian.SkillEffectType.SkillEffectNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectType);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EffectType != global::Bian.SkillEffectType.SkillEffectNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EffectType);
      }
      args_.WriteTo(ref output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EffectType != global::Bian.SkillEffectType.SkillEffectNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectType);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillEffect other) {
      if (other == null) {
        return;
      }
      if (other.EffectType != global::Bian.SkillEffectType.SkillEffectNone) {
        EffectType = other.EffectType;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectType = (global::Bian.SkillEffectType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectType = (global::Bian.SkillEffectType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 技能设置.
  /// </summary>
  public sealed partial class SkillSettings : pb::IMessage<SkillSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillSettings> _parser = new pb::MessageParser<SkillSettings>(() => new SkillSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bian.SkillReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillSettings(SkillSettings other) : this() {
      id_ = other.id_;
      targetType_ = other.targetType_;
      distance_ = other.distance_;
      accmulationTime_ = other.accmulationTime_;
      beforeAttackRollTime_ = other.beforeAttackRollTime_;
      releaseTime_ = other.releaseTime_;
      attackableMask_ = other.attackableMask_;
      rangeSettings_ = other.rangeSettings_ != null ? other.rangeSettings_.Clone() : null;
      effectSelf_ = other.effectSelf_.Clone();
      effectEnemy_ = other.effectEnemy_.Clone();
      buffsSelf_ = other.buffsSelf_.Clone();
      buffsEnemy_ = other.buffsEnemy_.Clone();
      canBreakPrepare_ = other.canBreakPrepare_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillSettings Clone() {
      return new SkillSettings(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 2;
    private global::Bian.SkillTargetType targetType_ = global::Bian.SkillTargetType.SkillTargetTypeFree;
    /// <summary>
    /// 技能指向类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bian.SkillTargetType TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 3;
    private int distance_;
    /// <summary>
    /// 技能释放像素距离
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "accmulation_time" field.</summary>
    public const int AccmulationTimeFieldNumber = 4;
    private int accmulationTime_;
    /// <summary>
    /// 技能时间设定
    ///
    /// |&lt;---- 蓄力 ---->|&lt;--- 前摇 --->|&lt;--- 释放 --->|
    /// |&lt;-------------- 技能释放时间 ---------------->|
    /// 技能蓄力时间 (ms)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccmulationTime {
      get { return accmulationTime_; }
      set {
        accmulationTime_ = value;
      }
    }

    /// <summary>Field number for the "before_attack_roll_time" field.</summary>
    public const int BeforeAttackRollTimeFieldNumber = 5;
    private int beforeAttackRollTime_;
    /// <summary>
    /// 技能前摇时间 (ms)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BeforeAttackRollTime {
      get { return beforeAttackRollTime_; }
      set {
        beforeAttackRollTime_ = value;
      }
    }

    /// <summary>Field number for the "release_time" field.</summary>
    public const int ReleaseTimeFieldNumber = 6;
    private int releaseTime_;
    /// <summary>
    /// 技能释放时间 (ms)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReleaseTime {
      get { return releaseTime_; }
      set {
        releaseTime_ = value;
      }
    }

    /// <summary>Field number for the "attackable_mask" field.</summary>
    public const int AttackableMaskFieldNumber = 7;
    private int attackableMask_;
    /// <summary>
    /// 技能攻击目标类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackableMask {
      get { return attackableMask_; }
      set {
        attackableMask_ = value;
      }
    }

    /// <summary>Field number for the "range_settings" field.</summary>
    public const int RangeSettingsFieldNumber = 8;
    private global::Bian.SkillRangeSettings rangeSettings_;
    /// <summary>
    /// 技能生效范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bian.SkillRangeSettings RangeSettings {
      get { return rangeSettings_; }
      set {
        rangeSettings_ = value;
      }
    }

    /// <summary>Field number for the "effect_self" field.</summary>
    public const int EffectSelfFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Bian.SkillEffect> _repeated_effectSelf_codec
        = pb::FieldCodec.ForMessage(74, global::Bian.SkillEffect.Parser);
    private readonly pbc::RepeatedField<global::Bian.SkillEffect> effectSelf_ = new pbc::RepeatedField<global::Bian.SkillEffect>();
    /// <summary>
    /// 作用于自身的技能效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Bian.SkillEffect> EffectSelf {
      get { return effectSelf_; }
    }

    /// <summary>Field number for the "effect_enemy" field.</summary>
    public const int EffectEnemyFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Bian.SkillEffect> _repeated_effectEnemy_codec
        = pb::FieldCodec.ForMessage(82, global::Bian.SkillEffect.Parser);
    private readonly pbc::RepeatedField<global::Bian.SkillEffect> effectEnemy_ = new pbc::RepeatedField<global::Bian.SkillEffect>();
    /// <summary>
    /// 作用于敌方的技能效果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Bian.SkillEffect> EffectEnemy {
      get { return effectEnemy_; }
    }

    /// <summary>Field number for the "buffs_self" field.</summary>
    public const int BuffsSelfFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Bian.BuffSettings> _repeated_buffsSelf_codec
        = pb::FieldCodec.ForMessage(90, global::Bian.BuffSettings.Parser);
    private readonly pbc::RepeatedField<global::Bian.BuffSettings> buffsSelf_ = new pbc::RepeatedField<global::Bian.BuffSettings>();
    /// <summary>
    /// 作用于自身的buff列表(加载数据时动态生成)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Bian.BuffSettings> BuffsSelf {
      get { return buffsSelf_; }
    }

    /// <summary>Field number for the "buffs_enemy" field.</summary>
    public const int BuffsEnemyFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Bian.BuffSettings> _repeated_buffsEnemy_codec
        = pb::FieldCodec.ForMessage(98, global::Bian.BuffSettings.Parser);
    private readonly pbc::RepeatedField<global::Bian.BuffSettings> buffsEnemy_ = new pbc::RepeatedField<global::Bian.BuffSettings>();
    /// <summary>
    /// 作用于敌方的buff列表(加载数据时动态生成)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Bian.BuffSettings> BuffsEnemy {
      get { return buffsEnemy_; }
    }

    /// <summary>Field number for the "can_break_prepare" field.</summary>
    public const int CanBreakPrepareFieldNumber = 13;
    private bool canBreakPrepare_;
    /// <summary>
    /// 蓄力能否被打断
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanBreakPrepare {
      get { return canBreakPrepare_; }
      set {
        canBreakPrepare_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TargetType != other.TargetType) return false;
      if (Distance != other.Distance) return false;
      if (AccmulationTime != other.AccmulationTime) return false;
      if (BeforeAttackRollTime != other.BeforeAttackRollTime) return false;
      if (ReleaseTime != other.ReleaseTime) return false;
      if (AttackableMask != other.AttackableMask) return false;
      if (!object.Equals(RangeSettings, other.RangeSettings)) return false;
      if(!effectSelf_.Equals(other.effectSelf_)) return false;
      if(!effectEnemy_.Equals(other.effectEnemy_)) return false;
      if(!buffsSelf_.Equals(other.buffsSelf_)) return false;
      if(!buffsEnemy_.Equals(other.buffsEnemy_)) return false;
      if (CanBreakPrepare != other.CanBreakPrepare) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TargetType != global::Bian.SkillTargetType.SkillTargetTypeFree) hash ^= TargetType.GetHashCode();
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (AccmulationTime != 0) hash ^= AccmulationTime.GetHashCode();
      if (BeforeAttackRollTime != 0) hash ^= BeforeAttackRollTime.GetHashCode();
      if (ReleaseTime != 0) hash ^= ReleaseTime.GetHashCode();
      if (AttackableMask != 0) hash ^= AttackableMask.GetHashCode();
      if (rangeSettings_ != null) hash ^= RangeSettings.GetHashCode();
      hash ^= effectSelf_.GetHashCode();
      hash ^= effectEnemy_.GetHashCode();
      hash ^= buffsSelf_.GetHashCode();
      hash ^= buffsEnemy_.GetHashCode();
      if (CanBreakPrepare != false) hash ^= CanBreakPrepare.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetType != global::Bian.SkillTargetType.SkillTargetTypeFree) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TargetType);
      }
      if (Distance != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Distance);
      }
      if (AccmulationTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AccmulationTime);
      }
      if (BeforeAttackRollTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BeforeAttackRollTime);
      }
      if (ReleaseTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReleaseTime);
      }
      if (AttackableMask != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AttackableMask);
      }
      if (rangeSettings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RangeSettings);
      }
      effectSelf_.WriteTo(output, _repeated_effectSelf_codec);
      effectEnemy_.WriteTo(output, _repeated_effectEnemy_codec);
      buffsSelf_.WriteTo(output, _repeated_buffsSelf_codec);
      buffsEnemy_.WriteTo(output, _repeated_buffsEnemy_codec);
      if (CanBreakPrepare != false) {
        output.WriteRawTag(104);
        output.WriteBool(CanBreakPrepare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetType != global::Bian.SkillTargetType.SkillTargetTypeFree) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TargetType);
      }
      if (Distance != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Distance);
      }
      if (AccmulationTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AccmulationTime);
      }
      if (BeforeAttackRollTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BeforeAttackRollTime);
      }
      if (ReleaseTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReleaseTime);
      }
      if (AttackableMask != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AttackableMask);
      }
      if (rangeSettings_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RangeSettings);
      }
      effectSelf_.WriteTo(ref output, _repeated_effectSelf_codec);
      effectEnemy_.WriteTo(ref output, _repeated_effectEnemy_codec);
      buffsSelf_.WriteTo(ref output, _repeated_buffsSelf_codec);
      buffsEnemy_.WriteTo(ref output, _repeated_buffsEnemy_codec);
      if (CanBreakPrepare != false) {
        output.WriteRawTag(104);
        output.WriteBool(CanBreakPrepare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TargetType != global::Bian.SkillTargetType.SkillTargetTypeFree) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TargetType);
      }
      if (Distance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Distance);
      }
      if (AccmulationTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccmulationTime);
      }
      if (BeforeAttackRollTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeforeAttackRollTime);
      }
      if (ReleaseTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReleaseTime);
      }
      if (AttackableMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackableMask);
      }
      if (rangeSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangeSettings);
      }
      size += effectSelf_.CalculateSize(_repeated_effectSelf_codec);
      size += effectEnemy_.CalculateSize(_repeated_effectEnemy_codec);
      size += buffsSelf_.CalculateSize(_repeated_buffsSelf_codec);
      size += buffsEnemy_.CalculateSize(_repeated_buffsEnemy_codec);
      if (CanBreakPrepare != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillSettings other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TargetType != global::Bian.SkillTargetType.SkillTargetTypeFree) {
        TargetType = other.TargetType;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      if (other.AccmulationTime != 0) {
        AccmulationTime = other.AccmulationTime;
      }
      if (other.BeforeAttackRollTime != 0) {
        BeforeAttackRollTime = other.BeforeAttackRollTime;
      }
      if (other.ReleaseTime != 0) {
        ReleaseTime = other.ReleaseTime;
      }
      if (other.AttackableMask != 0) {
        AttackableMask = other.AttackableMask;
      }
      if (other.rangeSettings_ != null) {
        if (rangeSettings_ == null) {
          RangeSettings = new global::Bian.SkillRangeSettings();
        }
        RangeSettings.MergeFrom(other.RangeSettings);
      }
      effectSelf_.Add(other.effectSelf_);
      effectEnemy_.Add(other.effectEnemy_);
      buffsSelf_.Add(other.buffsSelf_);
      buffsEnemy_.Add(other.buffsEnemy_);
      if (other.CanBreakPrepare != false) {
        CanBreakPrepare = other.CanBreakPrepare;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetType = (global::Bian.SkillTargetType) input.ReadEnum();
            break;
          }
          case 24: {
            Distance = input.ReadInt32();
            break;
          }
          case 32: {
            AccmulationTime = input.ReadInt32();
            break;
          }
          case 40: {
            BeforeAttackRollTime = input.ReadInt32();
            break;
          }
          case 48: {
            ReleaseTime = input.ReadInt32();
            break;
          }
          case 56: {
            AttackableMask = input.ReadInt32();
            break;
          }
          case 66: {
            if (rangeSettings_ == null) {
              RangeSettings = new global::Bian.SkillRangeSettings();
            }
            input.ReadMessage(RangeSettings);
            break;
          }
          case 74: {
            effectSelf_.AddEntriesFrom(input, _repeated_effectSelf_codec);
            break;
          }
          case 82: {
            effectEnemy_.AddEntriesFrom(input, _repeated_effectEnemy_codec);
            break;
          }
          case 90: {
            buffsSelf_.AddEntriesFrom(input, _repeated_buffsSelf_codec);
            break;
          }
          case 98: {
            buffsEnemy_.AddEntriesFrom(input, _repeated_buffsEnemy_codec);
            break;
          }
          case 104: {
            CanBreakPrepare = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetType = (global::Bian.SkillTargetType) input.ReadEnum();
            break;
          }
          case 24: {
            Distance = input.ReadInt32();
            break;
          }
          case 32: {
            AccmulationTime = input.ReadInt32();
            break;
          }
          case 40: {
            BeforeAttackRollTime = input.ReadInt32();
            break;
          }
          case 48: {
            ReleaseTime = input.ReadInt32();
            break;
          }
          case 56: {
            AttackableMask = input.ReadInt32();
            break;
          }
          case 66: {
            if (rangeSettings_ == null) {
              RangeSettings = new global::Bian.SkillRangeSettings();
            }
            input.ReadMessage(RangeSettings);
            break;
          }
          case 74: {
            effectSelf_.AddEntriesFrom(ref input, _repeated_effectSelf_codec);
            break;
          }
          case 82: {
            effectEnemy_.AddEntriesFrom(ref input, _repeated_effectEnemy_codec);
            break;
          }
          case 90: {
            buffsSelf_.AddEntriesFrom(ref input, _repeated_buffsSelf_codec);
            break;
          }
          case 98: {
            buffsEnemy_.AddEntriesFrom(ref input, _repeated_buffsEnemy_codec);
            break;
          }
          case 104: {
            CanBreakPrepare = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
